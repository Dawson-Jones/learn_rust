#[macro_export] // 宏到处, 其他包可以将该宏引入到当前作用域
// 定义宏不带!, 名称是 vec
macro_rules! vec {
    // 一对括号包含了整个模式。
    // $()，捕获了符合括号内模式的值用以在替代代码中使用。
    // $x:expr ，其匹配 Rust 的任意表达式，并将该表达式命名为 $x。
    // $() 之后的逗号说明一个可有可无的逗号分隔符可以出现在 $() 所匹配的代码之后。
    // 紧随逗号之后的 * 说明该模式匹配零个或更多个 * 之前的任何模式。
    ($( $x:expr ),*) => {
        {
            let mut temp_vec = Vec::new();
            $(
                temp_vec.push($x);
            )*

            temp_vec
        }
    };
}

